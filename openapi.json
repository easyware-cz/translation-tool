{
  "openapi": "3.0.1",
  "info": {
    "title": "Translation tool",
    "version": "1.0",
    "description": "This tool was created primarily to learn the basics of web application development.\n\nTech stack:\n- On back-end:\n  - ASP.NET Core in .NET 8.0\n  - Minimal APIs\n  - Entity Framework Core 8.0.2\n  - PostgreSQL 16\n- On front-end (NOT YET DONE):\n  - React.js\n  - Typescript\n  - MaterialUI\n- Other tools:\n  - Swagger\n  - GitHub"
  },
  "externalDocs": {
    "description": "Source code repository on GitHub",
    "url": "https://github.com/easyware-cz/translation-tool"
  },
  "tags": [
    {
      "name": "Project",
      "description": "can have different Environments"
    },
    {
      "name": "Environment",
      "description": "can have multiple localizations (localization is set of Translations and is a combination of a Language and Resource keys)"
    },
    {
      "name": "Language",
      "description": "Definition of language code - country code (e.g. en-US)"
    },
    {
      "name": "Resource key",
      "description": "is unique within the Environment"
    },
    {
      "name": "Translation",
      "description": "of the Resource key for the given Language"
    },
    {
      "name": "User",
      "description": "administration (NOT YET DONE)"
    }
  ],
  "paths": {
    "/translations": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Return a list of all Projects",
        "description": "If no project is found returns empty array",
        "operationId": "GetProjects",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Add a new Project",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectNewDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created at route",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Project already exists"
          }
        }
      }
    },
    "/translations/{projectName}": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Update a Project",
        "description": "",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectNewDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok - Project was updated"
          },
          "400": {
            "description": "Bad Request - Project already exists"
          },
          "404": {
            "description": "Not Found - Project was not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete a Project",
        "description": "",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - Project was deleted"
          },
          "400": {
            "description": "Not Found - Project was not found"
          }
        }
      },
      "get": {
        "tags": [
          "Environment"
        ],
        "summary": "Return a list of all Environments for the given Project",
        "description": "",
        "operationId": "GetProject",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Project was not found"
          }
        }
      },
      "post": {
        "tags": [
          "Environment"
        ],
        "summary": "Add a new Environment to the given Project",
        "description": "",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvNewDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created at route",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Environment already exists in the given Project"
          },
          "404": {
            "description": "Not Found - Project was not found"
          }
        }
      }
    },
    "/translations/{projectName}/{envName}": {
      "get": {
        "tags": [
          "Environment"
        ],
        "summary": "Return a list of localizations for the given Project and Environment",
        "description": "",
        "operationId": "GetEnv",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found"
          }
        }
      },
      "put": {
        "tags": [
          "Environment"
        ],
        "summary": "Update an Environment",
        "description": "",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvNewDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok - Environment was updated"
          },
          "400": {
            "description": "Bad Request - Environment already exists"
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Environment"
        ],
        "summary": "Delete an Environment",
        "description": "",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - Environment was deleted"
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found"
          }
        }
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "Language"
        ],
        "summary": "Retrurn a list of all Languages",
        "description": "",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Language"
        ],
        "summary": "Add a new Language",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageNewDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created at route",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageDto"
                }
              }
            }
          }
        }
      }
    },
    "/languages/{id}": {
      "get": {
        "tags": [
          "Language"
        ],
        "summary": "Return a Language",
        "description": "",
        "operationId": "GetLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Language was not found"
          }
        }
      },
      "put": {
        "tags": [
          "Language"
        ],
        "summary": "Update a Language",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageNewDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Not Found - Language was not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Language"
        ],
        "summary": "Delete a Language",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Not Found - Language was not found"
          }
        }
      }
    },
    "/translations/{projectName}/{envName}/keys": {
      "get": {
        "tags": [
          "Resource key"
        ],
        "summary": "Return a list of Resource keys for the given Environment",
        "description": "If no Resource key found returns empty array",
        "operationId": "GetKey",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found"
          }
        }
      },
      "post": {
        "tags": [
          "Resource key"
        ],
        "summary": "Add a list of new Resource keys",
        "description": "Validation - all Resource keys must be unique",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KeyNewDto"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created at route",
            "content": {
              "application/problem+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Duplicated Resource keys / Resource keys already exist"
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Resource key"
        ],
        "summary": "Delete all Rersource keys in the given Project and Environment",
        "description": "",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found / Resource keys were not found"
          }
        }
      }
    },
    "/translations/{projectName}/{envName}/keys/{id}": {
      "get": {
        "tags": [
          "Resource key"
        ],
        "summary": "Return Resource key by ID",
        "description": "",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found / Resource key was not found"
          }
        }
      },
      "put": {
        "tags": [
          "Resource key"
        ],
        "summary": "Update Resource key by ID",
        "description": "",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyNewDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request - Duplicated Resource keys"
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found / Resource key was not found"
          }
        }
      }
    },
    "/translations/{projectName}/{envName}/{languageCode}": {
      "get": {
        "tags": [
          "Translation"
        ],
        "summary": "Return list of Translations for the given Environment and Language",
        "description": "",
        "operationId": "GetTranslation",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languageCode",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TranslationDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found / Language was not found / Translations was not found"
          }
        }
      },
      "post": {
        "tags": [
          "Translation"
        ],
        "summary": "Add a list of Translations",
        "description": "",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languageCode",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TranslationNewDto"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created at route",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TranslationDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Translations already exist"
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found / Language was not found / Translations was not found"
          }
        }
      },
      "put": {
        "tags": [
          "Translation"
        ],
        "summary": "Update a list of Translations",
        "description": "",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languageCode",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "default": "json"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TranslationNewDto"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request - Input key(s) do not match the Resource keys"
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found / Language was not found / Translations was not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Translation"
        ],
        "summary": "Delete localization (all Translations in the Environment with the given Language code)",
        "description": "",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "envName",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languageCode",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request - Input key(s) do not match the Resource keys"
          },
          "404": {
            "description": "Not Found - Project was not found / Environment was not found / Language was not found / Translations was not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectNewDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnvDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnvNewDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LanguageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LanguageNewDto": {
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KeyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KeyNewDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TranslationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "keyName": {
            "type": "string",
            "nullable": true
          },
          "keyDescription": {
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "translationText": {
            "type": "string",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TranslationNewDto": {
        "type": "object",
        "properties": {
          "keyName": {
            "type": "string",
            "nullable": true
          },
          "translationText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}